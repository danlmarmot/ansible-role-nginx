---
# Installs nginx

- name: Started role - nginx
  debug:
    msg: "{{ lookup('pipe','date') }}"
    
# Look for the shared_folder variable for Vagrant-based installs
- name: Look for Vagrant shared folder
  stat: path=/home/vagrant/shared/installers/
  register: shared_folder

- name: Default to installing nginx
  set_fact:
    nginx_install_flag: true
    
- name: Get current nginx version
  shell: nginx -v 2>&1 | egrep -o '[0-9]+\.[0-9]+\.[0-9]+'
  register: nginx_version_cmd
  ignore_errors: yes
  changed_when: false

- name: Set nginx_install_flag to false if nginx version is already installed
  set_fact:
    nginx_install_flag: false
  when: nginx_version_cmd.rc == 0 and (nginx_pkg_version == nginx_version_cmd.stdout)

- name: Update apt-cache if older than two hours
  apt:
    update_cache: yes
    cache_valid_time: 7200
  when: nginx_install_flag == true

# For Vagrant-managed environments
- include: install-from-shared-dir.yml
  when: shared_folder.stat.exists and nginx_install_flag == true and "vagrant_managed" in group_names

- name: Install nginx
  apt:
    pkg: nginx
    state: installed
  when: nginx_install_flag == true

- name: Ensure nginx conf.d directory exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/nginx/conf.d

- name: Copy nginx.conf
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf.j2
    owner: root
    group: root
    mode: 644
  notify: Restart nginx handler

- name: Remove nginx default site if wanted
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  when: nginx_remove_default_site
  notify: Restart nginx handler

- name: Start nginx and enable it to start at boot
  service:
    name: nginx
    state: started
    enabled: yes

- name: Add static site if wanted
  include: add-static-site.yml
  when: nginx_static_site.install

- name: Finished role - nginx
  debug:
    msg: "{{ lookup('pipe','date') }}"
